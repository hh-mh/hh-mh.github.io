{"ast":null,"code":"import React,{useState,useEffect}from'react';// Main App component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[chatHistory,setChatHistory]=useState([]);const[userQuery,setUserQuery]=useState('');const[courseContent,setCourseContent]=useState('');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);// This URL is configured for a single course.\n// You MUST update 'YOUR_COURSE_DIRECTORY' to the correct course folder name\n// for each agent you create (e.g., 'algdisk', 'tekber', or 'analyst').\nconst courseContentUrl='https://raw.githubusercontent.com/hh-mh/hh-mh.github.io/main/teaching/algdisk/index.html';// State variable for exponential backoff retry\nconst[retryDelay,setRetryDelay]=useState(1000);// Start with 1 second delay\n// Function to parse HTML content and extract text\nconst parseHtmlForText=html=>{try{const parser=new DOMParser();const doc=parser.parseFromString(html,'text/html');// Extract innerText from the body, which should contain most of the visible content\n// without script tags, style tags, etc.\nreturn doc.body.innerText;}catch(e){console.error(\"Failed to parse HTML:\",e);return\"\";// Return an empty string if parsing fails\n}};// Function to handle fetching the course material from GitHub Pages\nuseEffect(()=>{async function fetchCourseContent(){try{const response=await fetch(courseContentUrl);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const htmlText=await response.text();const plainText=parseHtmlForText(htmlText);setCourseContent(plainText);// Add an initial message to the chat\nsetChatHistory([{role:'system',text:\"Hi there! I'm your AI assistant for this course. Please ask me any questions you have about the course material.\"}]);}catch(e){console.error('Failed to fetch course content:',e);setError('Could not load course material. Please check the URL.');}}fetchCourseContent();},[]);// Empty dependency array means this runs once on component mount\n// Function to call the Gemini API\nconst callGeminiApi=async(prompt,delay)=>{try{const payload={contents:[{role:'user',parts:[{text:prompt}]}]// You can use other models here if you have an API key.\n// const apiKey = \"\";\n};const apiUrl=\"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=\";const response=await fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(response.status===429){// Handle rate limiting with exponential backoff\nthrow new Error('Rate limit exceeded. Retrying...');}if(!response.ok){throw new Error(\"API call failed with status: \".concat(response.status));}const result=await response.json();if(result.candidates&&result.candidates.length>0&&result.candidates[0].content&&result.candidates[0].content.parts&&result.candidates[0].content.parts.length>0){return result.candidates[0].content.parts[0].text;}else{throw new Error('Unexpected API response structure or no content.');}}catch(e){if(e.message.includes('Rate limit exceeded')&&delay<16000){// Max retry delay of 16 seconds\nconsole.warn(\"Retrying in \".concat(delay,\"ms...\"));setRetryDelay(delay*2);await new Promise(res=>setTimeout(res,delay));return callGeminiApi(prompt,delay*2);// Recursive call with increased delay\n}else{throw e;}}};// Function to handle user query submission\nconst handleQuery=async e=>{e.preventDefault();if(!userQuery.trim()||isLoading)return;// Add user's message to chat history\nconst newUserMessage={role:'user',text:userQuery};setChatHistory(prev=>[...prev,newUserMessage]);setUserQuery('');setIsLoading(true);setError(null);// Construct the prompt for the LLM\n// This is a simple RAG (Retrieval-Augmented Generation) approach.\n// We provide the full context of the course material for the LLM to \"refer\" to.\nconst prompt=\"\\n      You are an AI assistant for a university course. Your purpose is to answer student questions based on the provided course material.\\n\\n      **Course Material (for your reference):**\\n      ---\\n      \".concat(courseContent,\"\\n      ---\\n\\n      **Important Rules:**\\n      - Only answer questions based on the course material provided.\\n      - If a question cannot be answered from the material, state that you do not have enough information and can only answer questions related to the provided text.\\n      - Be concise and helpful.\\n      - Maintain a friendly and academic tone.\\n\\n      **Student's Question:**\\n      \").concat(userQuery,\"\\n    \");try{const assistantResponse=await callGeminiApi(prompt,retryDelay);setChatHistory(prev=>[...prev,{role:'assistant',text:assistantResponse}]);setRetryDelay(1000);// Reset retry delay on success\n}catch(e){console.error('Error fetching response:',e);setError('An error occurred. Please try again later.');// Add error message to chat history\nsetChatHistory(prev=>[...prev,{role:'assistant',text:\"I'm sorry, I was unable to provide a response at this time. Please try again.\"}]);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col h-screen bg-gray-100 font-sans\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-4 flex flex-col h-full max-w-2xl\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-800\",children:\"Course AI Assistant\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 mt-1\",children:\"Ask me anything about the course material!\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4 bg-white rounded-lg shadow-md mb-4\",children:chatHistory.length>0?chatHistory.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"p-3 my-2 rounded-lg max-w-[85%] \".concat(msg.role==='user'?'bg-blue-500 text-white self-end ml-auto':'bg-gray-200 text-gray-800 self-start mr-auto'),children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:msg.text})},index)):/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-gray-400 mt-10\",children:isLoading?'Loading course content...':'Chat history will appear here.'})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",role:\"alert\",children:/*#__PURE__*/_jsx(\"span\",{className:\"block sm:inline\",children:error})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleQuery,className:\"flex p-2 bg-white rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userQuery,onChange:e=>setUserQuery(e.target.value),placeholder:\"Type your question here...\",className:\"flex-1 p-3 rounded-l-lg border-2 border-r-0 border-gray-300 focus:outline-none focus:border-blue-500 transition-colors\",disabled:isLoading||!courseContent}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-500 text-white p-3 rounded-r-lg hover:bg-blue-600 transition-colors duration-200 disabled:bg-blue-300 disabled:cursor-not-allowed\",disabled:isLoading||!courseContent,children:isLoading?/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin h-5 w-5 text-white mx-2\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]}):'Send'})]})]})});}","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","chatHistory","setChatHistory","userQuery","setUserQuery","courseContent","setCourseContent","isLoading","setIsLoading","error","setError","courseContentUrl","retryDelay","setRetryDelay","parseHtmlForText","html","parser","DOMParser","doc","parseFromString","body","innerText","e","console","fetchCourseContent","response","fetch","ok","Error","concat","status","htmlText","text","plainText","role","callGeminiApi","prompt","delay","payload","contents","parts","apiUrl","method","headers","JSON","stringify","result","json","candidates","length","content","message","includes","warn","Promise","res","setTimeout","handleQuery","preventDefault","trim","newUserMessage","prev","assistantResponse","className","children","map","msg","index","onSubmit","type","value","onChange","target","placeholder","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d"],"sources":["/home/mikael/www/teaching/algdisk/course-agent/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Main App component\nexport default function App() {\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userQuery, setUserQuery] = useState('');\n  const [courseContent, setCourseContent] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // This URL is configured for a single course.\n  // You MUST update 'YOUR_COURSE_DIRECTORY' to the correct course folder name\n  // for each agent you create (e.g., 'algdisk', 'tekber', or 'analyst').\n  const courseContentUrl = 'https://raw.githubusercontent.com/hh-mh/hh-mh.github.io/main/teaching/algdisk/index.html';\n\n  // State variable for exponential backoff retry\n  const [retryDelay, setRetryDelay] = useState(1000); // Start with 1 second delay\n\n  // Function to parse HTML content and extract text\n  const parseHtmlForText = (html) => {\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, 'text/html');\n      // Extract innerText from the body, which should contain most of the visible content\n      // without script tags, style tags, etc.\n      return doc.body.innerText;\n    } catch (e) {\n      console.error(\"Failed to parse HTML:\", e);\n      return \"\"; // Return an empty string if parsing fails\n    }\n  };\n\n  // Function to handle fetching the course material from GitHub Pages\n  useEffect(() => {\n    async function fetchCourseContent() {\n      try {\n        const response = await fetch(courseContentUrl);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const htmlText = await response.text();\n        const plainText = parseHtmlForText(htmlText);\n        setCourseContent(plainText);\n        \n        // Add an initial message to the chat\n        setChatHistory([{\n          role: 'system',\n          text: \"Hi there! I'm your AI assistant for this course. Please ask me any questions you have about the course material.\"\n        }]);\n      } catch (e) {\n        console.error('Failed to fetch course content:', e);\n        setError('Could not load course material. Please check the URL.');\n      }\n    }\n    fetchCourseContent();\n  }, []); // Empty dependency array means this runs once on component mount\n\n  // Function to call the Gemini API\n  const callGeminiApi = async (prompt, delay) => {\n    try {\n      const payload = {\n        contents: [\n          { role: 'user', parts: [{ text: prompt }] }\n        ],\n        // You can use other models here if you have an API key.\n        // const apiKey = \"\";\n      };\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=`;\n\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n\n      if (response.status === 429) {\n        // Handle rate limiting with exponential backoff\n        throw new Error('Rate limit exceeded. Retrying...');\n      }\n\n      if (!response.ok) {\n        throw new Error(`API call failed with status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 &&\n        result.candidates[0].content && result.candidates[0].content.parts &&\n        result.candidates[0].content.parts.length > 0) {\n        return result.candidates[0].content.parts[0].text;\n      } else {\n        throw new Error('Unexpected API response structure or no content.');\n      }\n    } catch (e) {\n      if (e.message.includes('Rate limit exceeded') && delay < 16000) { // Max retry delay of 16 seconds\n        console.warn(`Retrying in ${delay}ms...`);\n        setRetryDelay(delay * 2);\n        await new Promise(res => setTimeout(res, delay));\n        return callGeminiApi(prompt, delay * 2); // Recursive call with increased delay\n      } else {\n        throw e;\n      }\n    }\n  };\n\n  // Function to handle user query submission\n  const handleQuery = async (e) => {\n    e.preventDefault();\n    if (!userQuery.trim() || isLoading) return;\n\n    // Add user's message to chat history\n    const newUserMessage = { role: 'user', text: userQuery };\n    setChatHistory(prev => [...prev, newUserMessage]);\n    setUserQuery('');\n    setIsLoading(true);\n    setError(null);\n\n    // Construct the prompt for the LLM\n    // This is a simple RAG (Retrieval-Augmented Generation) approach.\n    // We provide the full context of the course material for the LLM to \"refer\" to.\n    const prompt = `\n      You are an AI assistant for a university course. Your purpose is to answer student questions based on the provided course material.\n\n      **Course Material (for your reference):**\n      ---\n      ${courseContent}\n      ---\n\n      **Important Rules:**\n      - Only answer questions based on the course material provided.\n      - If a question cannot be answered from the material, state that you do not have enough information and can only answer questions related to the provided text.\n      - Be concise and helpful.\n      - Maintain a friendly and academic tone.\n\n      **Student's Question:**\n      ${userQuery}\n    `;\n\n    try {\n      const assistantResponse = await callGeminiApi(prompt, retryDelay);\n      setChatHistory(prev => [...prev, { role: 'assistant', text: assistantResponse }]);\n      setRetryDelay(1000); // Reset retry delay on success\n    } catch (e) {\n      console.error('Error fetching response:', e);\n      setError('An error occurred. Please try again later.');\n      // Add error message to chat history\n      setChatHistory(prev => [...prev, { role: 'assistant', text: \"I'm sorry, I was unable to provide a response at this time. Please try again.\" }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gray-100 font-sans\">\n      <div className=\"container mx-auto p-4 flex flex-col h-full max-w-2xl\">\n        <header className=\"text-center py-4\">\n          <h1 className=\"text-3xl font-bold text-gray-800\">Course AI Assistant</h1>\n          <p className=\"text-gray-500 mt-1\">Ask me anything about the course material!</p>\n        </header>\n\n        <div className=\"flex-1 overflow-y-auto p-4 bg-white rounded-lg shadow-md mb-4\">\n          {chatHistory.length > 0 ? (\n            chatHistory.map((msg, index) => (\n              <div\n                key={index}\n                className={`p-3 my-2 rounded-lg max-w-[85%] ${\n                  msg.role === 'user'\n                    ? 'bg-blue-500 text-white self-end ml-auto'\n                    : 'bg-gray-200 text-gray-800 self-start mr-auto'\n                }`}\n              >\n                <p className=\"text-sm\">{msg.text}</p>\n              </div>\n            ))\n          ) : (\n            <div className=\"text-center text-gray-400 mt-10\">\n              {isLoading ? 'Loading course content...' : 'Chat history will appear here.'}\n            </div>\n          )}\n        </div>\n\n        {error && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n            <span className=\"block sm:inline\">{error}</span>\n          </div>\n        )}\n\n        <form onSubmit={handleQuery} className=\"flex p-2 bg-white rounded-lg shadow-md\">\n          <input\n            type=\"text\"\n            value={userQuery}\n            onChange={(e) => setUserQuery(e.target.value)}\n            placeholder=\"Type your question here...\"\n            className=\"flex-1 p-3 rounded-l-lg border-2 border-r-0 border-gray-300 focus:outline-none focus:border-blue-500 transition-colors\"\n            disabled={isLoading || !courseContent}\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 text-white p-3 rounded-r-lg hover:bg-blue-600 transition-colors duration-200 disabled:bg-blue-300 disabled:cursor-not-allowed\"\n            disabled={isLoading || !courseContent}\n          >\n            {isLoading ? (\n              <svg className=\"animate-spin h-5 w-5 text-white mx-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n            ) : (\n              'Send'\n            )}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}